- name: Kill processes on port 8080
  shell: |
    netstat -tlpn | grep ':8080' | awk '{print $7}' | cut -d'/' -f1 | xargs -r kill -9
  become: yes
  ignore_errors: yes

- name: Force cleanup any remaining CockroachDB processes
  shell: |
    pkill -9 cockroach || true
  become: yes
  ignore_errors: yes

- name: Wait for ports to be free
  wait_for:
    port: "{{ item }}"
    state: stopped
    timeout: 30
  loop:
    - "{{ cockroachdb.http_port }}"
    - "{{ cockroachdb.sql_port }}"
    - "{{ cockroachdb.cluster_port }}"

- name: Ensure directories with proper permissions
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ cockroachdb.user }}"
    group: "{{ cockroachdb.group }}"
    mode: '0700'
    recurse: yes
  with_items:
    - "{{ cockroachdb.data_dir }}"
    - "{{ cockroachdb.log_dir }}"
  become: yes

- name: Start CockroachDB single-node
  shell: |
    cockroach start-single-node \
    --background \
    --store={{ cockroachdb.data_dir }} \
    --listen-addr={{ ansible_host }}:{{ cockroachdb.cluster_port }} \
    --http-addr={{ ansible_host }}:{{ cockroachdb.http_port }} \
    --sql-addr={{ ansible_host }}:{{ cockroachdb.sql_port }} \
    --cache={{ cockroachdb.cache_size }} \
    --max-sql-memory={{ cockroachdb.max_memory }} \
    --certs-dir={{ cockroachdb.certs_dir }} \
    --locality="{{ cockroachdb.locality }}"
  become: yes
  register: start_result
  until: start_result.rc == 0
  retries: 5
  delay: 10

- name: Wait for CockroachDB to be ready
  wait_for:
    host: "{{ ansible_host }}"
    port: "{{ cockroachdb.sql_port }}"
    timeout: 30


- name: Creat root password
  shell: |
    cockroach sql \
    --certs-dir={{ cockroachdb.certs_dir }} \
    --host={{ ansible_host }}:{{ cockroachdb.sql_port }} \
    -e "ALTER USER root WITH PASSWORD '{{ vault_cockroachdb_admin_password }}';"
  become: yes
  register: create_user_result
  no_log: true
  ignore_errors: true

- name: Debug output (without sensitive info)
  debug:
    msg: "Attempted to create user {{ vault_cockroachdb_admin_user }}. Check connection and permissions."
  when: create_user_result.rc is defined and create_user_result.rc != 0



- name: Create database
  shell: |
    cockroach sql \
    --certs-dir={{ cockroachdb.certs_dir }} \
    --host={{ ansible_host }}:{{ cockroachdb.sql_port }} \
    -e "CREATE DATABASE IF NOT EXISTS db;"
  become: yes
  register: create_db_result

- name: Grant database privileges to admin user
  shell: |
    cockroach sql \
    --certs-dir={{ cockroachdb.certs_dir }} \
    --host={{ ansible_host }}:{{ cockroachdb.sql_port }} \
    -e "GRANT ALL ON DATABASE db TO {{ vault_cockroachdb_admin_user }};"
  become: yes